
server:
    port: 8080

spring:
    application:
        name: "accounts"
    config:
        import: "optional:configserver:http://localhost:8071/"

    cloud:
        kubernetes:
            discovery:
                all-namespaces: true
        openfeign:
            circuitbreaker:
                enabled: true

        function:
            definition: updateCommunication
        stream:
            bindings:
                updateCommunication-in-0:
                    destination: communication-sent         # for input binding acts as a queue name
                    group: ${spring.application.name}
                sendCommunication-out-0:
                    destination: send-communication         # for output binding acts as an exchange name
            kafka:
                binder:
                    brokers:
                        - localhost:9092
    profiles:
        active: "prod"

    datasource:
        url: jdbc:h2:mem:testdb
        username: sa
        password: ""
        driver-class-name: org.h2.Driver
    h2:
        console:
            enabled: true
    jpa:
        show-sql: true
        hibernate:
            dialect: org.hibernate.dialect.H2Dialect
            ddl-auto: update
        database-platform: org.hibernate.dialect.H2Dialect

management:
    endpoints:
        web:
            exposure:
                include: "*"
    health:
        readiness-state:
            enabled: true
        liveness-state:
            enabled: true
    endpoint:
        shutdown:
            enabled: true
        health:
            probes:
                enabled: true
    info:
        env:
            enabled: true
    metrics:
        tags:
            application: ${spring.application.name}

endpoints:
    shutdown:
        enabled: true

logging:
    level:
        com:
            eazybytes:
                accounts: DEBUG
    pattern:
        level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"


resilience4j.circuitbreaker:
    configs:
        default:
            slidingWindowSize: 10                               # this element tells monitor 10 request atleast before go tho the decision to open or closed status
            permittedNumberOfCallsInHalfOpenState: 2            #allow 2 request in half open state
            failureRateThreshold: 50
            waitDurationInOpenState: 10000

resilience4j.retry:
    configs:
        default:
            maxAttempts: 3
            waitDuration: 500
            enableExponentialBackoff: true
            exponentialBackoffMultiplier: 2
            ignoreExceptions:
                - java.lang.NullPointerException
            retryExceptions:
                - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
    configs:
        default:
            timeoutDuration: 1000
            limitRefreshPeriod: 5000
            limitForPeriod: 1

info:
    app:
        name: "accounts"
        description: "EazyBank Accounts Application"
        version: "1.0.0"














#    config:
#        import:
#            - "application_qa.yml"
#            - "application_prod.yml"
#    profiles:
#        active:
#            - "qa"
#
#
#build:
#    version: "3.O"
#
## here prefix name is accounts
#accounts:
#    message: "Welcome to EazyBank accounts related local APIs"
#    contactDetails:
#        name: "Tushar-Developer"
#        email: "tushar@eazybytes.com"
#    onCallSupport:
#        -(555)555-124
#        -(555)555-125



